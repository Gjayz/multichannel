apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    signingConfigs {
        release {
            keyAlias rootProject.ext.signingConfigs.keyAlias
            keyPassword  rootProject.ext.signingConfigs.keyPassword
            storeFile file( rootProject.ext.signingConfigs.storeFile)
            storePassword  rootProject.ext.signingConfigs.storePassword
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    annotationProcessor("com.tinkerpatch.tinker:tinker-android-anno:1.9.2")
    provided("com.tinkerpatch.tinker:tinker-android-anno:1.9.2")
    compile("com.tinkerpatch.sdk:tinkerpatch-android-sdk:1.2.2")
}

apply from: 'tinkerpatch.gradle'

afterEvaluate {
    android.applicationVariants.all { variant ->
        variant.assemble.doLast {
            if (variant.buildType.name.contains('release') && rootProject.ext.android.multiChannels) {
                if (rootProject.ext.android.isMACOS) {
                    exec {
                        ignoreExitValue true
                        commandLine "sh", "${project.getRootDir()}/jiagu_mac/jiagu_360.sh", "${project.getProject().name}",
                                "${android.defaultConfig.applicationId}", "${android.defaultConfig.versionName}",
                                "${rootProject.ext.android.SdkPath}/build-tools/${android.buildToolsVersion}", "${android.signingConfigs.release.storeFile}",
                                "${android.signingConfigs.release.storePassword}", "${android.signingConfigs.release.keyAlias}",
                                "${android.signingConfigs.release.keyPassword}"
                    }
                }else if (rootProject.ext.android.isWindowsShell) {
                    exec {
                        ignoreExitValue true
                        commandLine "cmd", "/c", "${project.getRootDir()}/jiagu/jiagu_360.sh", "${project.getProject().name}",
                                "${android.defaultConfig.applicationId}", "${android.defaultConfig.versionName}",
                                "${rootProject.ext.android.SdkPath}\\build-tools\\${android.buildToolsVersion}", "${android.signingConfigs.release.storeFile}",
                                "${android.signingConfigs.release.storePassword}", "${android.signingConfigs.release.keyAlias}",
                                "${android.signingConfigs.release.keyPassword}"
                    }
                }else {
                    exec {
                        ignoreExitValue true
                        commandLine "cmd", "/c", "${project.getRootDir()}/jiagu/jiagu_360.bat", "${project.getProject().name}",
                                "${android.defaultConfig.applicationId}", "${android.defaultConfig.versionName}",
                                "${rootProject.ext.android.SdkPath}\\build-tools\\${android.buildToolsVersion}", "${android.signingConfigs.release.storeFile}",
                                "${android.signingConfigs.release.storePassword}", "${android.signingConfigs.release.keyAlias}",
                                "${android.signingConfigs.release.keyPassword}"
                    }
                }
            }
        }
    }
}

